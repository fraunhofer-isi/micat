{
  "extends": [
    "next/core-web-vitals",
    "@eslint-recommended"
  ],
  "plugins": [
    "folders",
    // enforces folder naming convention
    "filenames",
    // enforces file naming convention
    "unused-imports"
  ],
  "rules": {
    "camelcase": "error",
    "filenames/match-regex": [
      2,
      "^(_)?[a-z-\\.]+$"
    ],
    // kebap-case with optional _ prefix for next.js main files like _app.js
    "folders/match-regex": [
      2,
      "^(\\u005B)?[a-z-]+(\\u005D)?$",
      "/front_end/"
    ],
    // kebap-case with optional [ ] brackets
    "jsdoc/require-jsdoc": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "jsx-a11y/control-has-associated-label": "off",
    "keyword-spacing": "off",
    "linebreak-style": [
      "error",
      "unix"
    ],
    "max-len": [
      "error",
      {
        "code": 120
      }
    ],
    "max-lines": [
      1,
      {
        "max": 300,
        "skipBlankLines": true,
        "skipComments": true
      }
    ],
    "no-undef": "off",
    "no-console": "off",
    "no-else-return": "off",
    "no-underscore-dangle": "off",
    // off allows _ prefix for "private" properties like "_foo"
    "no-unused-vars": "off",
    "no-plusplus": "off",
    "no-restricted-syntax": "off",
    "no-param-reassign": "off",
    "no-continue": "off",
    "react/jsx-max-depth": [
      1,
      {
        "max": 8
      }
    ],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/display-name": 0,
    "react/function-component-definition": "off",
    "react/no-set-state": "off",
    "react/prop-types": 0,
    "react/require-optimization": "off",
    "react/static-property-placement": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "off",
    // we use semicolons, following suggions from
    // https://stackoverflow.com/questions/537632/should-i-use-semicolons-in-javascript
    "semi": [
      "error",
      "always",
      {
        "omitLastInOneLineBlock": false
      }
    ],
    "semi-style": [
      "error",
      "last"
    ],
    "no-extra-semi": [
      "error"
    ],
    "semi-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "sonarjs/prefer-immediate-return": "off",
    "space-before-blocks": "off",
    "space-before-function-paren": "off",
    "unicorn/no-static-only-class": "off",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "unused-imports/no-unused-imports": "error"
  }
}